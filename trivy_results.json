{
  "SchemaVersion": 2,
  "ArtifactName": "nextjs-prisma:1.0.0",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.17.1"
    },
    "ImageID": "sha256:7892e6847302dfb705b1c91e0376ea9ad813fa8331e6068e89a94abddd00cf37",
    "DiffIDs": [
      "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf",
      "sha256:920f1923645e68de6bce5f3b0ad5f77469310aa05fe4fb9d5d257b3362695542",
      "sha256:67726154c7bc2cbd42889fb4a898fee5f164aad3f4a466d9a1e9bd553c16d441",
      "sha256:4bb0a83ece736b14861970eb46398490df9da98462c675c94659470f2587e41e",
      "sha256:de62c733dc2530d4e52720672a3ba0701c40935333ca9613a858fff8b518124b",
      "sha256:b8a3c4a661e91b46afc171bdf36abc8f0d5da0d2c2c5e706878db21271f9e79d",
      "sha256:c395ed2dab1be83312901d08765c7101792f793b8037090097e87388e4f311bd",
      "sha256:0abb1caa1989c1f01f9ab4b7083f8ed1649c5521925b2f6bb0af4f749d15b967",
      "sha256:56eac8c690ac0891360720f6f1f2c35083f51498bbf8046b0cd0ceb7800da5cf",
      "sha256:caaf454b329cf022b1e6342ba0bf749655a27e9930de919440864894f200cb87",
      "sha256:cd15c8ca82fe2b663b9e276d3a6e64ad65ccc5c701f3f6d224e718a5abd6d7af"
    ],
    "RepoTags": [
      "nextjs-prisma:1.0.0"
    ],
    "ImageConfig": {
      "architecture": "arm64",
      "created": "2023-02-10T10:53:14.993552043Z",
      "history": [
        {
          "created": "2023-01-09T17:04:48Z",
          "created_by": "/bin/sh -c #(nop) ADD file:3080f19f39259a4b77cc53975de0184c78d4335ceb9ffb77a2838d0539ad6f85 in / "
        },
        {
          "created": "2023-01-09T17:04:49Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
          "empty_layer": true
        },
        {
          "created": "2023-02-03T03:02:14Z",
          "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=18.14.0",
          "empty_layer": true
        },
        {
          "created": "2023-02-03T03:23:32Z",
          "created_by": "/bin/sh -c addgroup -g 1000 node     \u0026\u0026 adduser -u 1000 -G node -s /bin/sh -D node     \u0026\u0026 apk add --no-cache         libstdc++     \u0026\u0026 apk add --no-cache --virtual .build-deps         curl     \u0026\u0026 ARCH= \u0026\u0026 alpineArch=\"$(apk --print-arch)\"       \u0026\u0026 case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"b58339afbfa329c94d2764fc7fac4750fc1cbb99c4aa6bf65509200d69e2e3b0\"           ;;         *) ;;       esac   \u0026\u0026 if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     \u0026\u0026 apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     \u0026\u0026 for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xf \"node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 cd \"node-v$NODE_VERSION\"     \u0026\u0026 ./configure     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) V=     \u0026\u0026 make install     \u0026\u0026 apk del .build-deps-full     \u0026\u0026 cd ..     \u0026\u0026 rm -Rf \"node-v$NODE_VERSION\"     \u0026\u0026 rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   \u0026\u0026 rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   \u0026\u0026 apk del .build-deps   \u0026\u0026 node --version   \u0026\u0026 npm --version"
        },
        {
          "created": "2023-02-03T03:23:33Z",
          "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
          "empty_layer": true
        },
        {
          "created": "2023-02-03T03:23:38Z",
          "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 mkdir -p /opt   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 apk del .build-deps-yarn   \u0026\u0026 yarn --version"
        },
        {
          "created": "2023-02-03T03:23:38Z",
          "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
        },
        {
          "created": "2023-02-03T03:23:38Z",
          "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
          "empty_layer": true
        },
        {
          "created": "2023-02-03T03:23:38Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
          "empty_layer": true
        },
        {
          "created": "2023-02-10T10:52:44Z",
          "created_by": "WORKDIR /app",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:52:45Z",
          "created_by": "RUN /bin/sh -c apk update # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:52:46Z",
          "created_by": "RUN /bin/sh -c apk add curl # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:53:14Z",
          "created_by": "COPY /app/next.config.js ./ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:53:14Z",
          "created_by": "COPY /app/.next ./.next # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:53:14Z",
          "created_by": "COPY /app/public ./public # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:53:14Z",
          "created_by": "COPY /app/.next/standalone ./ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-02-10T10:53:14Z",
          "created_by": "CMD [\"node\" \"server.js\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf",
          "sha256:920f1923645e68de6bce5f3b0ad5f77469310aa05fe4fb9d5d257b3362695542",
          "sha256:67726154c7bc2cbd42889fb4a898fee5f164aad3f4a466d9a1e9bd553c16d441",
          "sha256:4bb0a83ece736b14861970eb46398490df9da98462c675c94659470f2587e41e",
          "sha256:de62c733dc2530d4e52720672a3ba0701c40935333ca9613a858fff8b518124b",
          "sha256:b8a3c4a661e91b46afc171bdf36abc8f0d5da0d2c2c5e706878db21271f9e79d",
          "sha256:c395ed2dab1be83312901d08765c7101792f793b8037090097e87388e4f311bd",
          "sha256:0abb1caa1989c1f01f9ab4b7083f8ed1649c5521925b2f6bb0af4f749d15b967",
          "sha256:56eac8c690ac0891360720f6f1f2c35083f51498bbf8046b0cd0ceb7800da5cf",
          "sha256:caaf454b329cf022b1e6342ba0bf749655a27e9930de919440864894f200cb87",
          "sha256:cd15c8ca82fe2b663b9e276d3a6e64ad65ccc5c701f3f6d224e718a5abd6d7af"
        ]
      },
      "config": {
        "Cmd": [
          "node",
          "server.js"
        ],
        "Entrypoint": [
          "docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NODE_VERSION=18.14.0",
          "YARN_VERSION=1.22.19"
        ],
        "WorkingDir": "/app",
        "ArgsEscaped": true
      }
    }
  },
  "Results": [
    {
      "Target": "nextjs-prisma:1.0.0 (alpine 3.17.1)",
      "Class": "os-pkgs",
      "Type": "alpine",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2023-0286",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0286",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "There is a type confusion vulnerability relating to X.400 address proc ...",
          "Description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "Severity": "HIGH",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0286",
            "https://github.com/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://github.com/pyca/cryptography/security/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0286",
            "https://rustsec.org/advisories/RUSTSEC-2023-0006.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4203",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4203",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "[openssl: X.509 Name Constraints Read Buffer Overflow]",
          "Description": "X.509 Name Constraints Read Buffer Overflow",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4203",
            "https://github.com/advisories/GHSA-w67w-mw4j-8qrv",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4203",
            "https://rustsec.org/advisories/RUSTSEC-2023-0008.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-4304",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4304",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "A timing based side channel exists in the OpenSSL RSA Decryption imple ...",
          "Description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4304",
            "https://github.com/advisories/GHSA-p52g-cm5j-mjv4",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4304",
            "https://rustsec.org/advisories/RUSTSEC-2023-0007.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4450",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4450",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses  ...",
          "Description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4450",
            "https://github.com/advisories/GHSA-v5w6-wcm8-jm4q",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
            "https://rustsec.org/advisories/RUSTSEC-2023-0010.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0215",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0215",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The public API function BIO_new_NDEF is a helper function used for str ...",
          "Description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7. Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream. The OpenSSL cms and smime command line applications are similarly affected.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0215",
            "https://github.com/advisories/GHSA-r7jw-wp68-3xch",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0215",
            "https://rustsec.org/advisories/RUSTSEC-2023-0009.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0216",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0216",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "An invalid pointer dereference on read can be triggered when an applic ...",
          "Description": "An invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0216",
            "https://github.com/advisories/GHSA-29xx-hcv2-c4cp",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0216",
            "https://rustsec.org/advisories/RUSTSEC-2023-0011.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0217",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0217",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "An invalid pointer dereference on read can be triggered when an applic ...",
          "Description": "An invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0217",
            "https://github.com/advisories/GHSA-vxrh-cpg7-8vjr",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0217",
            "https://rustsec.org/advisories/RUSTSEC-2023-0012.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0401",
          "PkgID": "libcrypto3@3.0.7-r2",
          "PkgName": "libcrypto3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0401",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "A NULL pointer can be dereferenced when signatures are being verified  ...",
          "Description": "A NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0401",
            "https://github.com/advisories/GHSA-vrh7-x64v-7vxq",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0401",
            "https://rustsec.org/advisories/RUSTSEC-2023-0013.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0286",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0286",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "There is a type confusion vulnerability relating to X.400 address proc ...",
          "Description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "Severity": "HIGH",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0286",
            "https://github.com/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://github.com/pyca/cryptography/security/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0286",
            "https://rustsec.org/advisories/RUSTSEC-2023-0006.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4203",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4203",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "[openssl: X.509 Name Constraints Read Buffer Overflow]",
          "Description": "X.509 Name Constraints Read Buffer Overflow",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4203",
            "https://github.com/advisories/GHSA-w67w-mw4j-8qrv",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4203",
            "https://rustsec.org/advisories/RUSTSEC-2023-0008.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-4304",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4304",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "A timing based side channel exists in the OpenSSL RSA Decryption imple ...",
          "Description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4304",
            "https://github.com/advisories/GHSA-p52g-cm5j-mjv4",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4304",
            "https://rustsec.org/advisories/RUSTSEC-2023-0007.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4450",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4450",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses  ...",
          "Description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4450",
            "https://github.com/advisories/GHSA-v5w6-wcm8-jm4q",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
            "https://rustsec.org/advisories/RUSTSEC-2023-0010.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0215",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0215",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The public API function BIO_new_NDEF is a helper function used for str ...",
          "Description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7. Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream. The OpenSSL cms and smime command line applications are similarly affected.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0215",
            "https://github.com/advisories/GHSA-r7jw-wp68-3xch",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0215",
            "https://rustsec.org/advisories/RUSTSEC-2023-0009.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0216",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0216",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "An invalid pointer dereference on read can be triggered when an applic ...",
          "Description": "An invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0216",
            "https://github.com/advisories/GHSA-29xx-hcv2-c4cp",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0216",
            "https://rustsec.org/advisories/RUSTSEC-2023-0011.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0217",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0217",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "An invalid pointer dereference on read can be triggered when an applic ...",
          "Description": "An invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0217",
            "https://github.com/advisories/GHSA-vxrh-cpg7-8vjr",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0217",
            "https://rustsec.org/advisories/RUSTSEC-2023-0012.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0401",
          "PkgID": "libssl3@3.0.7-r2",
          "PkgName": "libssl3",
          "InstalledVersion": "3.0.7-r2",
          "FixedVersion": "3.0.8-r0",
          "Layer": {
            "DiffID": "sha256:0a24540c1e5a47e5a8116c43151cb45c985f7a65afe5d4d65127d9c6fea2ffcf"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0401",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "A NULL pointer can be dereferenced when signatures are being verified  ...",
          "Description": "A NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0401",
            "https://github.com/advisories/GHSA-vrh7-x64v-7vxq",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0401",
            "https://rustsec.org/advisories/RUSTSEC-2023-0013.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        }
      ]
    },
    {
      "Target": "Node.js",
      "Class": "lang-pkgs",
      "Type": "node-pkg",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2022-25881",
          "PkgName": "http-cache-semantics",
          "PkgPath": "usr/local/lib/node_modules/npm/node_modules/http-cache-semantics/package.json",
          "InstalledVersion": "4.1.0",
          "FixedVersion": "4.1.1",
          "Layer": {
            "DiffID": "sha256:920f1923645e68de6bce5f3b0ad5f77469310aa05fe4fb9d5d257b3362695542"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-25881",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "CVE-2022-25881 affecting package nodejs 16.18.1-2",
          "Description": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1333"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-rc47-6667-2j5j",
            "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-25881",
            "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253332",
            "https://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783"
          ],
          "PublishedDate": "2023-01-31T05:15:00Z",
          "LastModifiedDate": "2023-02-07T17:07:00Z"
        }
      ]
    }
  ]
}
